using System;

// :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

public class ObjectsCreater{

    // =====================================================================
    public int[ , , ] Matrix; 
    //----------------------------------------

    // =====================================================================
    public ObjectsCreater(){

        // -----------------------------------------------------------------
        Matrix = new int[ , , ]{ // CUBE
            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
            { {-1,-1}, {15, 2}, {16, 2}, {-1,-1} },
            { {-1,-1}, {15, 3}, {16, 3}, {-1,-1} }
        };
        // -----------------------------------------------------------------

    }

    // =====================================================================
    public int[,,] GetMatrixObject(string _type, string _side){
        
        // -----------------------------------------------------------------
        switch(_type){
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            case "T": 
                switch(_side){
                    // -----------------------------------------------------------------
                    case "UP": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 2}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {15, 3}, {16, 3}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "RIGHT": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {15, 2}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {-1,-1}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "DOWN": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {15, 2}, {16, 2}, {-1,-1} },
                            { {-1,-1}, {15, 3}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "LEFT": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {15, 2}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 3}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    default: return Matrix; break; // 200
                    // -----------------------------------------------------------------
                }
                break;
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            case "Z": 
                switch(_side){
                    // -----------------------------------------------------------------
                    case "UP": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {15, 2}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 3}, {16, 3}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "RIGHT": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {15, 2}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {-1,-1}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "DOWN": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {15, 2}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 3}, {16, 3}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "LEFT": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {15, 2}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {-1,-1}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    default: return Matrix; break; // 200
                    // -----------------------------------------------------------------
                }
                break;
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            case "L": 
                switch(_side){
                    // -----------------------------------------------------------------
                    case "UP": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {15, 3}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "RIGHT": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {15, 2}, {16, 2}, {-1,-1} },
                            { {14, 3}, {-1,-1}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "DOWN": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 1}, {15, 1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 2}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 3}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "LEFT": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {16, 2}, {-1,-1} },
                            { {14, 3}, {15, 3}, {16, 3}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    default: return Matrix; break; // 200
                    // -----------------------------------------------------------------

                }
                break;
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            case "I": // 200
                switch(_side){            
                    case "UP": 
                        return Matrix = new int[ , , ]{
                            { {14, 0}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {-1,-1}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "RIGHT": 
                        return Matrix = new int[ , , ]{
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {15, 3}, {16, 3}, {17, 3} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "DOWN": 
                        return Matrix = new int[ , , ]{
                            { {14, 0}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {-1,-1}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "LEFT": 
                        return Matrix = new int[ , , ]{
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {15, 3}, {16, 3}, {17, 3} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    default: return Matrix; break; // 200
                    // -----------------------------------------------------------------
                }
            break;
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            case "J": // 200
                switch(_side){
                    // -----------------------------------------------------------------
                    case "UP": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 2}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {15, 3}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "RIGHT": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {15, 2}, {16, 2}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {16, 3}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "DOWN": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 1}, {15, 1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {-1,-1}, {-1,-1}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                    case "LEFT": 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 2}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {14, 3}, {15, 3}, {16, 3}, {-1,-1} }
                        };
                        break;
                // -----------------------------------------------------------------
                default: return Matrix; break; // 200
                // -----------------------------------------------------------------
                }
                break;
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            case "CUBE": // 200
                switch(_side){
                    // -----------------------------------------------------------------
                    default: 
                        return Matrix = new int[ , , ]{ 
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                            { {-1,-1}, {15, 2}, {16, 2}, {-1,-1} },
                            { {-1,-1}, {15, 3}, {16, 3}, {-1,-1} }
                        };
                        break;
                    // -----------------------------------------------------------------
                }
                break;
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            default:  // 200
                return Matrix = new int[ , , ]{ // CUBE 
                    { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                    { {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1} },
                    { {-1,-1}, {15, 2}, {16, 2}, {-1,-1} },
                    { {-1,-1}, {15, 3}, {16, 3}, {-1,-1} }
                };
                break;
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
            // :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
        }
        // -----------------------------------------------------------------
    }
    // =====================================================================
    public int _GetRandom(int A, int B){ 
        Random RND = new Random(); return RND.Next(A, B);
    }
    // =====================================================================
    public int _ReadInt(){ return int.Parse(Console.ReadLine()); }
    // =====================================================================
    public string _ReadLine(){ return Console.ReadLine(); }
    // =====================================================================
    public void _WriteLine(string str){ Console.WriteLine(str); }
    // =====================================================================

}

// :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

